require(ggplot2)
setwd("/home/heumos/git/pangenome-paper/results/chunks_eval/")
chunks1 <- c("2chunks_ALIGN.tsv", sep = "\t", as.is = T)
chunks1
chunks1 <- read.table("2chunks_ALIGN.tsv", sep = "\t", as.is = T)
setwd("/home/heumos/git/pangenome-paper/results/chunks_eval/chunks_ALIGN/")
chunks1 <- read.table("1chunks_ALIGN.tsv", sep = "\t", as.is = T)
chunks2 <- read.table("2chunks_ALIGN.tsv", sep = "\t", as.is = T)
View(chunks1)
View(chunks2)
chunks1 <- read.table("1chunks_ALIGN.tsv", sep = "\t", as.is = T)
chunks2 <- read.table("2chunks_ALIGN.tsv", sep = "\t", as.is = T)
chunks4 <- read.table("4chunks_ALIGN.tsv", sep = "\t", as.is = T)
chunks8 <- read.table("8chunks_ALIGN.tsv", sep = "\t", as.is = T)
chunks16 <- read.table("16chunks_ALIGN.tsv", sep = "\t", as.is = T)$V1
chunks32 <- read.table("32chunks_ALIGN.tsv", sep = "\t", as.is = T)$V1
chunks64 <- read.table("64chunks_ALIGN.tsv", sep = "\t", as.is = T)$V1
chunks128 <- read.table("128chunks_ALIGN.tsv", sep = "\t", as.is = T)$V1
chunks256 <- read.table("256chunks_ALIGN.tsv", sep = "\t", as.is = T)$V1
chunks512 <- read.table("512chunks_ALIGN.tsv", sep = "\t", as.is = T)$V1
chunks1024 <- read.table("1024chunks_ALIGN.tsv", sep = "\t", as.is = T)$V1
View(chunks8)
chunks1 <- read.table("1chunks_ALIGN.tsv", sep = "\t", as.is = T)$V1
chunks2 <- read.table("2chunks_ALIGN.tsv", sep = "\t", as.is = T)$V1
chunks4 <- read.table("4chunks_ALIGN.tsv", sep = "\t", as.is = T)$V1
chunks8 <- read.table("8chunks_ALIGN.tsv", sep = "\t", as.is = T)$V1
chunks16 <- read.table("16chunks_ALIGN.tsv", sep = "\t", as.is = T)$V1
chunks32 <- read.table("32chunks_ALIGN.tsv", sep = "\t", as.is = T)$V1
chunks64 <- read.table("64chunks_ALIGN.tsv", sep = "\t", as.is = T)$V1
chunks128 <- read.table("128chunks_ALIGN.tsv", sep = "\t", as.is = T)$V1
chunks256 <- read.table("256chunks_ALIGN.tsv", sep = "\t", as.is = T)$V1
chunks512 <- read.table("512chunks_ALIGN.tsv", sep = "\t", as.is = T)$V1
chunks1024 <- read.table("1024chunks_ALIGN.tsv", sep = "\t", as.is = T)$V1
# function to iterate: normalize to minutes, then take the mean and collapse in one value (
# in the future some kind of box plot for e.g. 1024 chunks, but not for this report
format_time <- function(s, cond=F) {
m <- 0
s_d <- strsplit(s, "d")
# TODO IF!
if (length(s_d[[1]]) > 1) {
m <- m + (as.integer(s_d[[1]][1])*1440)
s_h <- strsplit(s_d[[1]][2], "h")
} else {
s_h <- strsplit(s_d[[1]][1], "h")
}
if (length(s_h[[1]]) > 1) {
m <- m + (as.integer(s_h[[1]][1])*60)
s_m <- strsplit(s_h[[1]][2], "m")
} else {
s_m <- strsplit(s_h[[1]][1], "m")
}
if (length(s_m[[1]]) > 1) {
m <- m + (as.integer(s_m[[1]][1]))
}
if (cond) {
if (m == 0) {
m <- as.integer(strsplit(s, "s")[[1]][1]) / 60
}
}
return(m)
}
chunks1 <- format_time(chunks1)
chunks2 <- mean(unlist(lapply(chunks2, format_time)))
chunks8 <- mean(unlist(lapply(chunks8, format_time)))
chunks16 <- mean(unlist(lapply(chunks16, format_time)))
chunks32 <- mean(unlist(lapply(chunks32, format_time)))
chunks64 <- mean(unlist(lapply(chunks64, format_time)))
chunks128 <- mean(unlist(lapply(chunks128, format_time)))
chunks256 <- mean(unlist(lapply(chunks256, format_time)))
chunks512 <- mean(unlist(lapply(chunks512, format_time)))
chunks4 <- mean(unlist(lapply(chunks4, format_time)))
chunks1024 <- mean(unlist(lapply(chunks1024, format_time)))
chunky_boy <- c(chunks1, chunks2, chunks4, chunks8, chunks16, chunks32, chunks64, chunks128, chunks256, chunks512, chunks1024)
texty_boy <- c("1", "2", "4", "8", "16", "32", "64", "128", "256", "512", "1024")
df <- data.frame(chunky_boy)
df$texty_boy <- texty_boy
df$texty_boy <- as.character(df$texty_boy)
df$texty_boy <- factor(df$texty_boy, levels=unique(df$texty_boy))
g <- ggplot(df, aes(group = 1)) +
aes(x = texty_boy, y = chunky_boy) +
geom_point() +
scale_y_log10() +
xlab("number of chunks") +
ylab("time in minutes (log10 scale)") +
geom_line() +
theme(text = element_text(size=14))
g
g <- ggplot(df, aes(group = 1)) +
aes(x = texty_boy, y = chunky_boy) +
geom_point() +
scale_y_log10() +
xlab("number of chunks") +
ylab("time in minutes (log10 scale)") +
geom_line() +
theme(text = element_text(size=16))
g
g <- ggplot(df, aes(group = 1)) +
aes(x = texty_boy, y = chunky_boy) +
geom_point() +
scale_y_log10() +
xlab("number of chunks") +
ylab("time in minutes (log10 scale)") +
geom_line() +
theme(text = element_text(size=20))
g
ggsave("by_chunks_ALIGN.pdf", g)
ggsave("by_chunks_ALIGN.png", g)
chunks1 <- read.table("1chunks_ALIGN.tsv", sep = "\t", as.is = T)
chunks2 <- read.table("2chunks_ALIGN.tsv", sep = "\t", as.is = T)
chunks4 <- read.table("4chunks_ALIGN.tsv", sep = "\t", as.is = T)
chunks8 <- read.table("8chunks_ALIGN.tsv", sep = "\t", as.is = T)
chunks16 <- read.table("16chunks_ALIGN.tsv", sep = "\t", as.is = T)
chunks32 <- read.table("32chunks_ALIGN.tsv", sep = "\t", as.is = T)
chunks64 <- read.table("64chunks_ALIGN.tsv", sep = "\t", as.is = T)
chunks128 <- read.table("128chunks_ALIGN.tsv", sep = "\t", as.is = T)
chunks256 <- read.table("256chunks_ALIGN.tsv", sep = "\t", as.is = T)
chunks512 <- read.table("512chunks_ALIGN.tsv", sep = "\t", as.is = T)
chunks1024 <- read.table("1024chunks_ALIGN.tsv", sep = "\t", as.is = T)
View(chunks256)
chunks1$gr <- "1"
View(chunks1)
chunks1$gr <- "1"
chunks2$gr <- "2"
chunks4$gr <- "4"
chunks8$gr <- "8"
chunks16$gr <- "16"
chunks32$gr <- "32"
chunks64$gr <- "64"
chunks128$gr <- "128"
chunks256$gr <- "256"
chunks512$gr <- "512"
chunks1024$gr <- "1024"
View(chunks64)
rbind(chunks1, chunks2)
chunks1 <- format_time(chunks1)
chunks1$V1 <- format.time(chunks1$V1)
chunks1$V1 <- format_time(chunks1$V1)
View(chunks1)
chunks1 <- read.table("1chunks_ALIGN.tsv", sep = "\t", as.is = T)
chunks2 <- read.table("2chunks_ALIGN.tsv", sep = "\t", as.is = T)
chunks4 <- read.table("4chunks_ALIGN.tsv", sep = "\t", as.is = T)
chunks8 <- read.table("8chunks_ALIGN.tsv", sep = "\t", as.is = T)
chunks16 <- read.table("16chunks_ALIGN.tsv", sep = "\t", as.is = T)
chunks32 <- read.table("32chunks_ALIGN.tsv", sep = "\t", as.is = T)
chunks64 <- read.table("64chunks_ALIGN.tsv", sep = "\t", as.is = T)
chunks128 <- read.table("128chunks_ALIGN.tsv", sep = "\t", as.is = T)
chunks256 <- read.table("256chunks_ALIGN.tsv", sep = "\t", as.is = T)
chunks512 <- read.table("512chunks_ALIGN.tsv", sep = "\t", as.is = T)
chunks1024 <- read.table("1024chunks_ALIGN.tsv", sep = "\t", as.is = T)
chunks1$gr <- "1"
chunks2$gr <- "2"
chunks4$gr <- "4"
chunks8$gr <- "8"
chunks16$gr <- "16"
chunks32$gr <- "32"
chunks64$gr <- "64"
chunks128$gr <- "128"
chunks256$gr <- "256"
chunks512$gr <- "512"
chunks1024$gr <- "1024"
chunks1$V1 <- format_time(chunks1$V1)
chunks2$V1 <- format_time(chunks2$V1)
chunks4$V1 <- format_time(chunks4$V1)
chunks8$V1 <- format_time(chunks8$V1)
chunks16$V1 <- format_time(chunks16$V1)
chunks32$V1 <- format_time(chunks32$V1)
chunks64$V1 <- format_time(chunks64$V1)
chunks128$V1 <- format_time(chunks128$V1)
chunks256$V1 <- format_time(chunks256$V1)
chunks512$V1 <- format_time(chunks512$V1)
chunks1024$V1 <- format_time(chunks1024$V1)
rbind(chunks1, chunks2)
View(chunks512)
chunks1 <- read.table("1chunks_ALIGN.tsv", sep = "\t", as.is = T)
chunks2 <- read.table("2chunks_ALIGN.tsv", sep = "\t", as.is = T)
chunks4 <- read.table("4chunks_ALIGN.tsv", sep = "\t", as.is = T)
chunks8 <- read.table("8chunks_ALIGN.tsv", sep = "\t", as.is = T)
chunks16 <- read.table("16chunks_ALIGN.tsv", sep = "\t", as.is = T)
chunks32 <- read.table("32chunks_ALIGN.tsv", sep = "\t", as.is = T)
chunks64 <- read.table("64chunks_ALIGN.tsv", sep = "\t", as.is = T)
chunks128 <- read.table("128chunks_ALIGN.tsv", sep = "\t", as.is = T)
chunks256 <- read.table("256chunks_ALIGN.tsv", sep = "\t", as.is = T)
chunks512 <- read.table("512chunks_ALIGN.tsv", sep = "\t", as.is = T)
chunks1024 <- read.table("1024chunks_ALIGN.tsv", sep = "\t", as.is = T)
chunks1$gr <- "1"
chunks2$gr <- "2"
chunks4$gr <- "4"
chunks8$gr <- "8"
chunks16$gr <- "16"
chunks32$gr <- "32"
chunks64$gr <- "64"
chunks128$gr <- "128"
chunks256$gr <- "256"
chunks512$gr <- "512"
chunks1024$gr <- "1024"
chunks2$V1
format_time(chunks2$V1)
lapply(chunks2$V1, format_time)
unlist(lapply(chunks2$V1, format_time))
chunks2$V1 <- unlist(lapply(chunks2$V1, format_time))
View(chunks2)
chunks1 <- read.table("1chunks_ALIGN.tsv", sep = "\t", as.is = T)
chunks2 <- read.table("2chunks_ALIGN.tsv", sep = "\t", as.is = T)
chunks4 <- read.table("4chunks_ALIGN.tsv", sep = "\t", as.is = T)
chunks8 <- read.table("8chunks_ALIGN.tsv", sep = "\t", as.is = T)
chunks16 <- read.table("16chunks_ALIGN.tsv", sep = "\t", as.is = T)
chunks32 <- read.table("32chunks_ALIGN.tsv", sep = "\t", as.is = T)
chunks64 <- read.table("64chunks_ALIGN.tsv", sep = "\t", as.is = T)
chunks128 <- read.table("128chunks_ALIGN.tsv", sep = "\t", as.is = T)
chunks256 <- read.table("256chunks_ALIGN.tsv", sep = "\t", as.is = T)
chunks512 <- read.table("512chunks_ALIGN.tsv", sep = "\t", as.is = T)
chunks1024 <- read.table("1024chunks_ALIGN.tsv", sep = "\t", as.is = T)
chunks1$gr <- "1"
chunks2$gr <- "2"
chunks4$gr <- "4"
chunks8$gr <- "8"
chunks16$gr <- "16"
chunks32$gr <- "32"
chunks64$gr <- "64"
chunks128$gr <- "128"
chunks256$gr <- "256"
chunks512$gr <- "512"
chunks1024$gr <- "1024"
chunks1$V1 <- format_time(chunks1$V1)
chunks2$V1 <- unlist(lapply(chunks2$V1, format_time))
chunks4$V1 <- unlist(lapply(chunks4$V1, format_time))
chunks8$V1 <- unlist(lapply(chunks8$V1, format_time))
chunks16$V1 <- unlist(lapply(chunks16$V1, format_time))
chunks32$V1 <- unlist(lapply(chunks32$V1, format_time))
chunks64$V1 <- unlist(lapply(chunks64$V1, format_time))
chunks128$V1 <- unlist(lapply(chunks128$V1, format_time))
chunks256$V1 <- unlist(lapply(chunks256$V1, format_time))
chunks512$V1 <- unlist(lapply(chunks512$V1, format_time))
chunks1024$V1 <- unlist(lapply(chunks1024$V1, format_time))
rbind(chunks1, chunks2)
rbind(chunks1, chunks2, chunks4, chunks8, chunks16, chunks32, chunks64, chunks128, chunks256, chunks512, chunks1024)
violin_chunks <- rbind(chunks1, chunks2, chunks4, chunks8, chunks16, chunks32, chunks64, chunks128, chunks256, chunks512, chunks1024)
View(violin_chunks)
p <- ggplot(violin_chunks, aes(x=gr, y=V1)) +
geom_violin()
p
p <- ggplot(violin_chunks, aes(x=gr, y=V1)) +
geom_boxplot()
p
group <- as.character(violin_chunks$gr)
violin_chunks <- violin_chunks %>%
mutate(gr=factor(gr,levels=group))
library("dplry")
library("dplyr")
violin_chunks <- violin_chunks %>%
mutate(gr=factor(gr,levels=group))
violin_chunks <- violin_chunks %>%
mutate(gr=factor(gr,levels=c("1", "2", "4", "8", "16", "32", "64", "128", "256", "512", "1024")))
p <- ggplot(violin_chunks, aes(x=gr, y=V1)) +
geom_boxplot()
p
p <- ggplot(violin_chunks, aes(x=gr, y=V1)) +
geom_violin()
p
p <- ggplot(violin_chunks, aes(x=gr, y=V1)) +
geom_boxplot()
p
p <- ggplot(violin_chunks, aes(x=gr, y=V1)) +
scale_y_log10() +
p <- ggplot(violin_chunks, aes(x=gr, y=V1)) +
scale_y_log10() +
ylab("time in minutes (log10 scale)") +
theme(text = element_text(size=20)
p <- ggplot(violin_chunks, aes(x=gr, y=V1)) +
p <- ggplot(violin_chunks, aes(x=gr, y=V1)) +
geom_boxplot() +
scale_y_log10() +
xlab("number of chunks") +
ylab("time in minutes (log10 scale)") +
geom_line() +
theme(text = element_text(size=20))
p
p <- ggplot(violin_chunks, aes(x=gr, y=V1)) +
geom_boxplot() +
scale_y_log10() +
xlab("number of chunks") +
ylab("time in minutes (log10 scale)") +
theme(text = element_text(size=20))
p
p <- ggplot(violin_chunks, aes(x=gr, y=V1)) +
geom_violin() +
scale_y_log10() +
xlab("number of chunks") +
ylab("time in minutes (log10 scale)") +
theme(text = element_text(size=20))
p
ggsave("by_chunks_ALIGN_violin.pdf", p)
View(violin_chunks)
log10(4105)
ggsave("by_chunks_ALIGN_violing.png", p)
p <- ggplot(violin_chunks, aes(x=gr, y=V1)) +
geom_violin() +
scale_y_log10() +
xlab("number of chunks") +
ylab("time in minutes (log10 scale)") +
ylim(c(0, 4200))
p <- ggplot(violin_chunks, aes(x=gr, y=V1)) +
geom_violin() +
scale_y_log10() +
xlab("number of chunks") +
ylab("time in minutes (log10 scale)") +
ylim(c(0, 4200)) +
theme(text = element_text(size=20))
p
View(chunks2)
View(violin_chunks)
p <- ggplot(violin_chunks, aes(x=gr, y=V1)) +
geom_violin() +
scale_y_log10() +
xlab("number of chunks") +
ylab("time in minutes (log10 scale)") +
ylim(c(0, 4200)) +
theme(text = element_text(size=20))
p
p <- ggplot(violin_chunks, aes(x=gr, y=V1)) +
geom_boxplot() +
scale_y_log10() +
xlab("number of chunks") +
ylab("time in minutes (log10 scale)") +
ylim(c(0, 4200)) +
theme(text = element_text(size=20))
p
p <- ggplot(violin_chunks, aes(x=gr, y=V1)) +
geom_boxplot() +
scale_y_log10() +
xlab("number of chunks") +
ylab("time in minutes (log10 scale)") +
theme(text = element_text(size=20))
p
ggsave("by_chunks_ALIGN_violin.pdf", p)
ggsave("by_chunks_ALIGN_violing.png", p)
